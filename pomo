#!/bin/bash

while getopts klp:t:m:e:u: flag
do
    case "${flag}" in
        p) pid=${OPTARG};;
        t) time=${OPTARG};;
        m) message=${OPTARG};;
        e) endtime=${OPTARG};;
        u) unix_endtime=${OPTARG};;
    esac
done

if [ $# -eq 0 ]; then
    list=true;
fi

for arg in "$@"
do
    if [ -v kill_id_next ]; then
        kid=$arg
        unset kill_id_next
    elif [ "$arg" = "l" -o "$arg" = "-l" ]; then
        list=true;
    elif [ "$arg" = "k" -o "$arg" = "-k" ]; then
        kill=true;
        kill_id_next=true;
    elif [ "$arg" = "h" -o "$arg" = "-h" -o "$arg" = "-?" -o "$arg" = "--help" ]; then
        echo """Usage: pomo [NUMBER[SUFFIX]] NAME
Display NAME in a notification after NUMBER(25) minutes.  SUFFIX may be 's' for seconds (the default),
'm' for minutes, 'h' for hours or 'd' for days."""
        exit
    fi
done

max_pomid=0

IFS=$'\n'
lines=($(ps -fC pomo | tr -s ' ' | tail -n +2))

output=("ID NAME REMAINING
")
for wline in ${lines[@]}
do
    prid=$(echo $wline | cut -d " " -f2)
    line=$(echo $wline | cut -d " " -f10-)
    pomid=""
    endtime=""
    IFS=" "
    next=""
    skip=true
    for arg in $line
    do
        case $next in
            endtime) endtime=$arg;;
            message) message=$arg;;
            pomid) pomid=$arg; max_pomid=$(( $arg > max_pomid ? $arg : max_pomid ));;
        esac

        if [ "$arg" = "l" -o "$arg" = "-l" -o "$arg" = "k" -o "$arg" = "-k" ] ; then
            :
        elif [ "$arg" = "-p" ] ; then
            unset skip
            next="pomid"
        elif [ "$arg" = "-u" ] ; then
            unset skip
            next="endtime"
        elif [ "$arg" = "-m" ] ; then
            unset skip
            next="message"
        else
            next=""
        fi
    done

    if [ -v skip ]; then :
    elif [ -v list ]; then
        seconds=$(expr $endtime - $(date +%s))
        remaining="$(date -d "0 + $seconds seconds" +%H:%M:%S)"
        output+=("$pomid $message $remaining
")
    elif [ -v kill ]; then
        if [ "$kid" = "$pomid" -o "$kid" = "" ]; then
            kill $prid
        fi
    fi
done


if [ -v pid ]; then
    sleep $time && notify-send -t 500000 $message
elif [ -v kill ]; then :
elif [ -v list ]; then
    if [ ${#output[@]} -gt 1 ]; then
        echo ${output[@]} | column -t
    fi
else
    IFS=""

    if [ -z $2 ]; then
        amount=25
        sleep_unit=m
        task=$1
    else
        task=$2
        amount=$(grep -Eo '[0-9\.]+' <<< "$1")
        sleep_unit=$(grep -Eo '[[:alpha:]]' <<< "$1")
    fi

    if [ -z $sleep_unit ]; then
        sleep_unit="m"
    fi

    case $sleep_unit in
        s) ;;
        m) amount=$(bc <<< "$amount * 60");;
        h) amount=$(bc <<< "$amount * 3600");;
        *) echo "please use valid sleep time like '${amount}h' or '${amount}m' or '${amount}s'"; exit
    esac

    if [ -z $amount ]; then
        echo "no sleep time specified"; exit
    elif [ -z $task ]; then
        echo "no task specified"; exit
    fi

    $0 -p $(expr $max_pomid + 1) -t ${amount}s -m $task -u $(date -d "+ $amount seconds" +%s) -e $(date -d "+ $amount seconds" --rfc-3339=s) &
fi

